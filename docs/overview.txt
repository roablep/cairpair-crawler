Goal: we are building an app that is a directory of resources for caregivers of older adults. What is CarePair and how does it work?CarePair is a mobile application designed to connect dementia family caregivers with services and supports tailored to their preferences and needs. The app features two main resource tabs:One for accessing formal services such as support groups, training/education, financial/legal assistance, respite care, adult day care, activities for people with dementia and their caregivers, dementia-specific emergency resources, and more. The other tab serves as a resource library, offering articles, blogs, videos, podcasts, and other content providing tips, advice, training, and comfort.Caregivers' needs are assessed through a quick 10-question needs assessment questionnaire, which they complete when they first use the app and can retake at any time for updated recommendations. Additionally, preferences are suggested on the user’s profile under “preferences,” which can also be modified at any time.Who can use CarePair?CarePair is primarily designed for family caregivers of individuals living with dementia. However, it can also be utilized by healthcare professionals and organizations seeking to support dementia caregivers.What types of services and supports does CarePair offer?CarePair offers a comprehensive range of formal services tailored to dementia caregivers, including: Support groups Training/legal assistance Respite care Adult day care Activities for people with dementia and their caregivers Dementia-specific emergency services And more. Additionally, CarePair provides a resource library comprising articles, blogs, videos, podcasts, and other content aimed at offering tips, advice, training, and comfort. How does CarePair match caregivers with services and supports? CarePair utilizes a combination of user-provided preferences and needs, along with advanced matching algorithms, to suggest relevant formal services and resources from the resource library. Caregivers can input their specific needs through a quick 10-question needs assessment questionnaire, which provides personalized recommendations based on their responses, in addition to their preferences indicated on their profile. This questionnaire can be retaken at any time for updated recommendations. Problem: 1) Resources vary by region (city, state, country) and it's not efficient for humans to collect this information at scale. 2) Information about resources can get stale (e.g. a support group is no longer active) and it's not efficient for humans to check this information at scale. 3) Information about resources can be incomplete (e.g. a support group is missing the time it meets) and it's not efficient for humans to check this information at scale. I need to make a dynamic web crawler that, given a URL, can extract the following information:1) The name of the resource2) The type of resource (e.g. support group, training/education, financial/legal assistance, respite care, adult day care, activities for people with dementia and their caregivers, dementia-specific emergency resources)3) The location of the resource (e.g. city, state, country)4) The contact information of the resource (e.g. phone number, email address, website)5) The description of the resource6) The date and time of the resource (e.g. when it meets, how often it meets)7) The age range of the resource (e.g. 18+, 65+)8) The target audience of the resource (e.g. caregivers, people with dementia, healthcare professionals)9) The cost of the resource (e.g. free, sliding scale, insurance accepted)10) The eligibility criteria of the resource (e.g. must be a caregiver, must be a person with dementia)11) The language of the resource (e.g. English, Spanish, etc.)12) The accessibility of the resource (e.g. wheelchair accessible, transportation provided)13) The format of the resource (e.g. in-person, virtual, hybrid)14) The date the resource was last updated15) The source of the resource (e.g. website, social media, etc.)16) The URL of the resource17) The date the resource was added to the database22) The date the resource was last reviewedThe web crawler should be able to handle different website structures and formats, and should be able to extract the required information from a variety of sources. The output should be in CSV format, with each row representing a different resource and each column representing a different piece of information. The web crawler should also be able to handle errors and exceptions gracefully, and should be able to log any issues that arise during the crawling process.We can use any libraries available, e.g. LiteLLM, PortKey, Kong AI Gateway, Dify, vLLM, LangChain, Pydantic, Crawl4AI, BeautifulSoup, Scrapy, Selenium, etc. to build the web crawler. The web crawler should be able to run on a schedule (e.g. daily) and should be able to send notifications when new resources are added or when existing resources are updated or removed. Optionally, when a new resource is added to a Google Sheet/Form, the webcrawler should be able to pick up that resource and kick off the crawling process. The web crawler should also be able to handle different languages and formats, and should be able to extract the required information from a variety of sources. The output should be in CSV format, with each row representing a different resource and each column representing a different piece of information. The web crawler should also be able to handle errors and exceptions gracefully, and should be able to log any issues that arise during the crawling process.

Key requirements:
Given a website, crawl the page
Translate to English if not in English
Extract links and metadata. 
Extract the required information into one or more Resources
If required info is not on that page, but links on the page suggest that the required info may be on other page(s), crawl those pages too and try to gather required info. Combine info from other pages into Resource(s)
Keep track of domains crawled and resources. Probably separate tables.
If the resource is already in the database, update it
If the resource is not in the database, add it
If the resource is removed from the website, mark resource as removed

